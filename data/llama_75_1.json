{"text":"Evaporate Demo Use DFEvaporateProgram Use MultiValueEvaporateProgram Bonus Use the underlying EvaporateExtractor Load data Parse Data Running the DFEvaporateProgram Fitting Functions Run Inference  Getting Started Use Cases Understanding Optimizing Module Guides API Reference Community Contributing Changes  This demo shows how you can extract DataFrame from raw text using the Evaporate paper Arora et al https arxiv org abs 2304 09433 The inspiration is to first fit on a set of training text The fitting process uses the LLM to generate a set of parsing functions from the text These fitted functions are then applied to text during inference time If you re opening this Notebook on colab you will probably need to install LlamaIndex The DFEvaporateProgram will extract a 2D dataframe from a set of datapoints given a set of fields and some training data to fit some functions on Here we load a set of cities from Wikipedia Here we demonstrate how to extract datapoints with our DFEvaporateProgram Given a set of fields the DFEvaporateProgram can first fit functions on a set of training data and then run extraction over inference data In contrast to the DFEvaporateProgram which assumes the output obeys a 2D tabular format one row per node the MultiValueEvaporateProgram returns a list of DataFrameRow objects each object corresponds to a column and can contain a variable length of values This can help if we want to extract multiple values for one field from a given piece of text In this example we use this program to parse gold medal counts The underlying EvaporateExtractor offers some additional functionality e g actually helping to identify fields over a set of text Here we show how you can use identify_fields to determine relevant fields around a general topic field","link":"https://docs.llamaindex.ai/en/stable/examples/output_parsing/evaporate_program.html"}