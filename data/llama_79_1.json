{"text":"Controllable Agents for RAG Setup Data Setup Agent Run Some Queries Define Toolset Setup OpenAI Agent Out of the box Test Step Wise Execution Inspect Steps Tasks  Getting Started Use Cases Understanding Optimizing Module Guides API Reference Community Contributing Changes Adding agentic capabilities on top of your RAG pipeline can allow you to reason over much more complex questions But a big pain point for agents is the lack of steerability transparency An agent may tackle a user query through chain of thought planning which requires repeated calls to an LLM During this process it can be hard to inspect what s going on or stop correct execution in the middle This notebook shows you how to use our brand new lower level agent API which allows controllable step wise execution on top of a RAG pipeline We showcase this over Wikipedia documents Here we load a simple dataset of different cities from Wikipedia Define LLM Callback Manager In this section we define our tools and setup the agent Each tool here corresponds to a simple top k RAG pipeline over a single document Wikipedia page We setup an OpenAI Agent through its components an AgentRunner as well as an OpenAIAgentWorker We now demonstrate the capabilities of our step wise agent framework We show how it can handle complex queries both e2e as well as step by step We can then show how we can steer the outputs We now break this query down into steps We first create a task object from the user query We can then start running through steps or even interjecting our own This returns a Task object which contains the input additional state in extra_state and other fields Now let s try executing a single step of this task When we inspect the logs and the output we see that the first part was executed the demographics of Houston We can also take a look at the upcoming step NOTE Currently the input is not shown since execution of a step purely depends on internal memory This is something we re working on If you wanted to pause execution now you can you can take the intermediate results without completing the agent flow NOTE The memory of the agent agent memory isn t modified until the task is complete and committed so if you pause now the memory won t be committed This is good in case the execution fails Let s run the next two steps Since the steps look good we are now ready to call finalize_response get back our response This will also commit the task execution to the memory object present in our agent_runner We can inspect it We can inspect current and previous tasks and steps This gives you greater transparency into what the agent has processed","link":"https://docs.llamaindex.ai/en/stable/examples/agent/agent_runner/agent_runner_rag.html"}