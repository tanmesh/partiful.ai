{"text":"Fine tuning modelsIntroInstalling firectlSigning inPreparing your datasetPreparing your fine tuning job settingsKick off fine tuning jobDeploy for inference Clean upSupported modelsHuggingFace to JSONL GuidesSTRUCTURED RESPONSESEnterprise GuidesDocumentationExample text completionclassification DatasetSetting Up Fine TuningDatasetSetting Up Fine Tuning The guide will walk you through the steps to fine tune a Fireworks supported base model The fine tuning service is currently in its pre alpha phase and is 100 free to use Please give it a try and share your feedback in the fine tuning Discord channel We utilize LoRA Low Rank Adaptation for efficient and effective fine tuning of large language models Take advantage of this opportunity to enhance your models with our cutting edge technology Fine tuning a model with a targeted dataset is crucial for several key reasons In essence fine tuning a model with a specific dataset is a pivotal step in ensuring its enhanced accuracy relevance and suitability for specific applications Let s hop on a journey of fine tuning a model The firectl command line interface CLI will be used to manage your LLM models Run the following command to sign into Fireworks Confirm that you have successfully signed in by listing your account You should see your account ID To fine tune a model we need to first upload a dataset Once uploaded this dataset can be used to create one or more fine tuning jobs A dataset consists of a single JSONL file where each line is a separate training example Limits To create dataset named by the identifier and upload the files and you can check the dataset with To use an existing HuggingFace dataset please refer to the script below for conversion Datasets are private and cannot be viewed by other accounts To kick off a fine tuning job you need to specify the settings and save it locally in a new directory Define a yaml file with following fields For this example we ll use databricks databricks dolly 15k dataset focused on instruction following Each record in this jsonl dataset consists of a category instruction an optional context and the expected response Here are a couple of sample records Next to set up how you d like to use the dataset for fine tuning the text completion tuning setting should be configured with following fields A typical settings yaml would look like Now let s try a different scenario to tune the model for multi class classification specifically We will utilize the symptom_to_diagnosis dataset available on Hugging Face This dataset is structured to associate medical symptoms with potential diagnoses Records in the dataset might look like this To fine tune a model for classifying symptoms to diagnoses configure your settings yaml file as follows A typical settings yaml for this dataset would be You can kick off a fine tuning job via firectl create fine tuning job command by passing in the settings yaml and dataset by following the example below Optionally you can also pass in a unique model id via flag to override the model name If not specified model will be named by default as after the kick off you can check the status of the recipe job with after the fine tuning is finished the tuned model will be uploaded directly and you can see the model via by default the created model is in undeployed state To further deploy or delete the model please refer to the deploy fine tuned models guide If you d like to use a dataset from huggingface in our fine tuning service the code snippet below should convert any dataset to a JSONL file Updated 2 days ago","link":"https://readme.fireworks.ai/docs/fine-tuning-models"}