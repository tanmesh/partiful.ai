{"text":"Email Data Extraction Add required packages Enable Logging and Set up OpenAI API Key Set Up Expected JSON Output Definition JSON Schema Load content from eml msg file Use LLM function to extract content in JSON format For outlook message   Getting Started Use Cases Understanding Optimizing Module Guides API Reference Community Contributing Changes  OpenAI functions can be used to extract data from Email This is another example of getting structured data from unstructured conent using LLamaIndex The primary objective of this example is to transform raw email content into an easily interpretable JSON format exemplifying a practical application of language models in data extraction Extracted structued JSON data can then be used in any downstream application We will use a sample email as shown in below image This email mimics a typical daily communication sent by ARK Investment to its subscribers This sample email includes detailed information about trades under their Exchange Traded Funds ETFs By using this specific example we aim to showcase how we can effectively extract and structure complex financial data from a real world email scenario transforming it into a comprehensible JSON format  You will need following libraries along with LlamaIndex unstructured msg A package for handling unstructured data required to get content from eml and msg format In this step we set up logging to monitor the program s execution and debug if needed We also configure the OpenAI API key essential for utilizing OpenAI services Replace YOUR_KEY_HERE with your actual OpenAI API key Here we define a Python class named EmailData using the Pydantic library This class models the structure of the data we expect to extract from emails including sender receiver the date and time of the email etfs having list of shares traded under that ETF In this step we will use the UnstructuredReader from the llama hub to load the content of an eml email file or msg Outlook file This file s contents are then stored in a variable for further processing In the final step we utilize the llama_index package to create a prompt template for extracting insights from the loaded email An instance of the OpenAI model is used to interpret the email content and extract the relevant information based on our predefined EmailData schema The output is then converted to a dictionary format for easy viewing and processing","link":"https://docs.llamaindex.ai/en/stable/examples/usecases/email_data_extraction.html"}