{"text":"Routers Concept Usage Pattern Usage Pattern Defining a selector Using as a Query Engine Using as a Retriever Using selector as a standalone module   Getting Started Use Cases Understanding Optimizing Module Guides API Reference Community Contributing Changes Routers are modules that take in a user query and a set of choices defined by metadata and returns one or more selected choices They can be used on their own as selector modules or used as a query engine or retriever e g on top of other query engines retrievers They are simple but powerful modules that use LLMs for decision making capabilities They can be used for the following use cases and more Selecting the right data source among a diverse range of data sources Deciding whether to do summarization e g using summary index query engine or semantic search e g using vector index query engine Deciding whether to try out a bunch of choices at once and combine the results using multi routing capabilities The core router modules exist in the following forms LLM selectors put the choices as a text dump into a prompt and use LLM text completion endpoint to make decisions Pydantic selectors pass choices as Pydantic schemas into a function calling endpoint and return Pydantic objects A simple example of using our router module as part of a query engine is given below Defining a selector is at the core of defining a router You can easily use our routers as a query engine or a retriever In these cases the router will be responsiblefor selecting query engine s or retriever s to route the user query to We also highlight our ToolRetrieverRouterQueryEngine for retrieval augmented routing this is the casewhere the set of choices themselves may be very big and may need to be indexed NOTE this is a beta feature We also highlight using our router as a standalone module Some examples are given below with LLM and Pydantic based single multi selectors A RouterQueryEngine is composed on top of other query engines as tools Similarly a RouterRetriever is composed on top of other retrievers as tools An example is given below You can use the selectors as standalone modules Define choices as either a list of ToolMetadata or as a list of strings","link":"https://docs.llamaindex.ai/en/stable/module_guides/querying/router/root.html"}