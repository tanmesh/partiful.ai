{"text":"Multi Document Agents Setup and Download Data Building Multi Document Agents Running Example Queries Build Document Agent for each Document Build Retriever Enabled OpenAI Agent Define Baseline Vector Store Index  Getting Started Use Cases Understanding Optimizing Module Guides API Reference Community Contributing Changes  In this guide you learn towards setting up an agent that can effectively answer different types of questions over a larger set of documents These questions include the following QA over a specific doc QA comparing different docs Summaries over a specific doc Comparing summaries between different docs We do this with the following architecture setup a document agent over each Document each doc agent can do QA summarization within its doc setup a top level agent over this set of document agents Do tool retrieval and then do CoT over the set of tools to answer a question In this section we ll define imports and then download Wikipedia articles about different cities Each article is stored separately We load in 18 cities this is not quite at the level of hundreds of documents but its still large enough to warrant some top level document retrieval If you re opening this Notebook on colab you will probably need to install LlamaIndex Define Global LLM and Embeddings In this section we show you how to construct the multi document agent We first build a document agent for each document and then define the top level parent agent with an object index In this section we define document agents for each document We define both a vector index for semantic search and summary index for summarization for each document The two query engines are then converted into tools that are passed to an OpenAI function calling agent This document agent can dynamically choose to perform semantic search or summarization within a given document We create a separate document agent for each city We build a top level agent that can orchestrate across the different document agents to answer any user query This agent takes in all document agents as tools This specific agent RetrieverOpenAIAgent performs tool retrieval before tool use unlike a default agent that tries to put all tools in the prompt Here we use a top k retriever but we encourage you to customize the tool retriever method As a point of comparison we define a naive RAG pipeline which dumps all docs into a single vector index collection We set the top_k 4 Let s run some example queries ranging from QA summaries over a single document to QA summarization over multiple documents","link":"https://docs.llamaindex.ai/en/stable/examples/agent/multi_document_agents.html"}